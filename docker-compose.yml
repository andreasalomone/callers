services:
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./services/api
    ports:
      - "8000:8000"
    volumes:
      - ./services/api:/app
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy

  collector:
    build:
      context: ./services/collector
      dockerfile: Dockerfile
    volumes:
      - ./services/collector/app:/app/app
      - ./services/collector/channels.yml:/app/channels.yml
      - collector_session:/app/session
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - api

volumes:
  postgres_data:
  collector_session: 